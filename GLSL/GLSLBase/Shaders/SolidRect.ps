#version 330

out vec4 FragColor;

uniform vec3 u_cameraPos;
uniform vec3 u_lightPos;

const float c_ambient = 0.2;
const float c_diffuse = 0.7;
const float c_specular = 0.7;

in vec4 v_color;
in vec3 v_normal;
in vec3 v_pos;

void main()
{
	vec3 lightDir = normalize(u_lightPos - v_pos);
	vec3 viewDir = normalize(u_cameraPos - v_pos);
	vec3 reflectDir = reflect(-lightDir,v_normal);

	float ambient = 1.0;
	float diffuse = max(0,dot(lightDir,v_normal));
	float specular = pow(max(0,dot(viewDir,reflectDir)),128);


	FragColor.rgb = (c_ambient*ambient + c_specular * specular + c_diffuse * diffuse) * v_color.rgb;
}

